{"version":3,"sources":["components/NavBar.js","Home.js","helper.js","components/Form.js","components/ViewData.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","component","Link","to","variant","color","Title","Home","_this$props","this","children","classes","components_NavBar","className","container","buttons","Button_default","Component","withStyles","marginTop","display","justifyContent","alignItems","flexDirection","link","Helper","credentials","type","axios","post","then","response","console","log","catch","err","fetch","res","json","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","name","message","time","errorText","nameError","messageError","handleSubmit","bind","assertThisInitialized","handleMessageChange","handleNameChange","helper","event","target","value","length","setState","e","preventDefault","data","Clock","JSON","stringify","postData","noValidate","autoComplete","onSubmit","field","TextField_default","error","id","label","textField","onChange","margin","helperText","multiline","rows","button","theme","flexWrap","marginLeft","spacing","unit","marginRight","dense","menu","width","ViewData","messages","_this2","GetData","map","key","_id","Card_default","card","CardContent_default","gutterBottom","text","renderMessages","minWidth","textAlign","App","src_Home","Route","path","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2ee4f0e.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nconst NavBar = props => {\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography\n                        component={Link}\n                        to=\"/\"\n                        variant=\"title\"\n                        color=\"inherit\"\n                    >\n                        {props.Title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    container: {\n        marginTop: '20vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    buttons: {\n        display: 'flex',\n        flexDirection: 'row'\n    }\n};\nclass Home extends Component {\n    render() {\n        const { children, classes } = this.props;\n        return (\n            <div>\n                <NavBar Title=\"MedGo\" />\n                <div className={classes.container}>\n                    <div className={classes.buttons}>\n                        <Button component={Link} to=\"/postmessage\">\n                            Post New Message\n                        </Button>\n                        <Button component={Link} to=\"/viewmessages\">\n                            Check Messages\n                        </Button>\n                    </div>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\nHome.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);\n","import axios from 'axios';\nconst link = \"https://medgo-yaaham.herokuapp.com/\"; \n\nexport default class Helper {\n    postData(credentials, type) {\n        axios.post(link+type,credentials)\n        .then(response => {\n            console.log(response, 'Message added!');\n          })\n          .catch(err => {\n            console.log(err, 'Message not added, try again');\n          });\n        \n} \nGetData(type){ \n    return fetch(link+type).then((res)=>res.json());\n}\n\n}\n\n    \n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helper from '../helper';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Clock from 'react-live-clock';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        marginTop: '5vh'\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit\n    },\n    field: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    dense: {\n        marginTop: 16\n    },\n    menu: {\n        width: 200\n    }\n});\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            message: '',\n            time:'',\n            errorText: '',\n            nameError: false,\n            messageError: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleMessageChange = this.handleMessageChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.helper = new Helper(); \n    }\n    handleMessageChange(event) {\n        if (event.target.value.length > 0) {\n            this.setState({\n                message: event.target.value,\n                errorText: '',\n                messageError: false\n            });\n        } else {\n            this.setState({\n                message: event.target.value,\n                errorText: 'Empty Field Not Allowed',\n                messageError: true\n            });\n        }\n    }\n    handleNameChange(event) {\n        if (event.target.value.length > 0) {\n            this.setState({\n                name: event.target.value,\n                errorText: '',\n                nameError: false\n            });\n        } else {\n            this.setState({\n                name: event.target.value,\n                errorText: 'Empty Field Not Allowed',\n                nameError: true\n            });\n        }\n    }\n    handleSubmit(e) {\n        //prevent page form refreshing\n        e.preventDefault();\n        //call ajax to send state to DB\n        console.log('submitting');\n        if (this.state.name === '' || this.state.message === '') {\n            this.setState({\n                errorText: 'Empty Field Not Allowed',\n                nameError: true,\n                messageError: true\n            });\n        } else {\n            let data = {\n                name: this.state.name,\n                message: this.state.message,\n                time : Clock\n            };\n            JSON.stringify(data);\n           this.helper.postData(data,'form');\n            this.setState({\n                name: '',\n                message: ''\n            });\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        \n        return (\n            <div>\n                <form\n                    className={classes.container}\n                    noValidate\n                    autoComplete=\"off\"\n                    onSubmit={this.handleSubmit}\n                >\n                    <div className={classes.field}>\n                        <TextField\n                            error={this.state.nameError}\n                            id=\"Email\"\n                            label=\"Email\"\n                            className={classes.textField}\n                            value={this.state.name}\n                            onChange={this.handleNameChange}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            helperText={this.state.errorText}\n                        />\n                    </div>\n                    <div className={classes.field}>\n                        <TextField\n                            error={this.state.messageError}\n                            id=\"Message\"\n                            label=\"Message\"\n                            multiline\n                            rows=\"4\"\n                            className={classes.textField}\n                            value={this.state.message}\n                            onChange={this.handleMessageChange}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            helperText={this.state.errorText}\n                        />\n                    </div>\n                    <Button\n                        variant=\"contained\"\n                        type=\"submit\"\n                        className={classes.button}\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\nForm.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Form);\n","import React, { Component } from 'react';\nimport Helper from '../helper';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    container: { marginTop: '5vh' },\n    card: {\n        minWidth: 275,\n        margin: '5%'\n    },\n    text: { textAlign: 'center' }\n};\nclass ViewData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: []\n        };\n        this.helper = new Helper();\n    }\n    componentDidMount() {\n        this.helper\n            .GetData('form')\n            .then(res => {\n                this.setState({ messages: res });\n            })\n    }\n\n    renderMessages() {\n        const { classes } = this.props;\n\n        return this.state.messages.map(message => {\n            console.log(message);\n            return (\n                <div key={message._id} className=\"messages\">\n                    <Card className={classes.card}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                Username : {message.name}\n                            </Typography>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                Message : {message.message}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </div>\n            );\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.container}>\n                <Typography\n                    className={classes.text}\n                    variant=\"h6\"\n                    component=\"h2\"\n                >\n                    Guest Messages\n                </Typography>\n                <div className=\"guestdataContainer\">\n                    {this.renderMessages()}\n                </div>\n            </div>\n        );\n    }\n}\nViewData.propTypes = {\n    classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ViewData);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './Home';\n\nimport Form from './components/Form';\nimport ViewData from './components/ViewData';\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Home>\n                    <Route path=\"/postmessage\" component={Form} />\n                    <Route path=\"/viewmessages\" component={ViewData} />\n                </Home>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}